version: '3.5'

services:
  postgres:
    container_name: powerstack-postgres
    image: postgres:14.5
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: powerstack
    command: -p 5432

  apollo:
    container_name: powerstack-apollo
    image: powerstack-apollo:local
    ports:
      - '${APOLLO_SERVICE_PORT}:${APOLLO_SERVICE_PORT}'
    depends_on:
      - postgres
    restart: always
    environment:
      PORT: ${APOLLO_SERVICE_PORT}

  hasura:
    container_name: powerstack-hasura
    image: powerstack-hasura:local
    ports:
      - '${HASURA_GRAPHQL_SERVER_PORT}:${HASURA_GRAPHQL_SERVER_PORT}'
    depends_on:
      - postgres
      - apollo
    links:
      - apollo
    restart: always
    environment:
      # https://hasura.io/docs/1.0/graphql/core/deployment/graphql-engine-flags/reference.html
      HASURA_GRAPHQL_DATABASE_URL: postgres://user:pass@postgres:5432/powerstack?sslmode=disable
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_SERVER_PORT: ${HASURA_GRAPHQL_SERVER_PORT}
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CORS_DOMAIN: '*'
      HASURA_CUSTOM_REMOTE_SCHEMA_URL: http://apollo:${APOLLO_SERVICE_PORT}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anon

  # auth:
  #   container_name: powerstack-auth
  #   image: blockmatic/powerstack-auth
  #   ports:
  #     - '${HASURA_AUTH_SERVICE_PORT}:${HASURA_AUTH_SERVICE_PORT}'
  #   depends_on:
  #     - postgres
  #   restart: always
  #   environment:
  #     AUTH_EMAIL_TEMPLATE_FETCH_URL: ${AUTH_EMAIL_TEMPLATE_FETCH_URL}

volumes:
  pg-data:

networks:
  default:
    name: powerstack
